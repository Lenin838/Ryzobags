<%- include("lHeader") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop | RYZO BAGS</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: {
                DEFAULT: '#007D8B',
                dark: '#006570',
                light: '#4cacb6',
              },
              secondary: '#f8f9fa',
            },
            fontFamily: {
              sans: ['Inter', 'sans-serif'],
            },
          },
        },
        variants: {
      extend: {
        textColor: ['hover']
      }
    }
      };
    </script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        @media (max-width: 640px) {
            .scrollbar-thin {
                max-height: 10rem;
            }
            .search-icon, .clear-icon {
                width: 1rem;
                height: 1rem;
            }
        }
    </style>
</head>
<body class="bg-gray-50 font-sans">


  <!-- Search -->
  <div class="container mx-auto px-2 sm:px-4 mb-6 sm:mb-8">
    <form action="/shop" method="GET" class="flex justify-center">
      <div class="relative w-full max-w-full sm:max-w-2xl">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 sm:pl-4 pointer-events-none">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 sm:h-5 w-4 sm:w-5 text-gray-400 search-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
        <input type="text" 
               class="w-full pl-10 sm:pl-12 pr-12 sm:pr-16 py-2 sm:py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent shadow-sm text-sm sm:text-base" 
               placeholder="Search for bags, backpacks, and more..." 
               name="search" 
               id="searchInput"
               value="<%= search %>">
        
        <div class="absolute inset-y-0 right-0 flex items-center pr-2 sm:pr-3">
          <button type="button" class="px-2 text-gray-400 hover:text-primary focus:outline-none mr-1" id="clearSearch">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 sm:h-5 w-4 sm:w-5 clear-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
          
          <button class="bg-primary hover:bg-primary-dark text-white font-medium px-3 sm:px-4 py-1 sm:py-2 rounded-lg transition-colors text-sm sm:text-base" type="submit">
            Search
          </button>
        </div>
      </div>
  </div>

  <div class="container mx-auto px-2 sm:px-4">
    <div class="flex flex-col lg:flex-row gap-4 sm:gap-8">
      <div class="w-full lg:w-1/5">
          <h5 class="text-base sm:text-lg font-semibold text-gray-800 mb-4 sm:mb-6 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 sm:h-5 w-4 sm:w-5 mr-2 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
            </svg>
            Filters
          </h5>

          <!-- Brand -->
          <div class="mb-4 sm:mb-6">
            <h6 class="font-medium text-gray-800 mb-2 sm:mb-3 flex items-center text-sm sm:text-base">
              <span class="w-1 h-4 bg-primary rounded-full mr-2"></span>
              Brand
            </h6>
            <div class="space-y-2 max-h-40 sm:max-h-48 overflow-y-auto pr-2 scrollbar-thin">
              <% brands.forEach(brand => { %>
                <div class="flex items-center">
                  <input class="w-4 h-4 text-primary border-gray-300 rounded focus:ring-primary" 
                        type="checkbox" 
                        id="brand-<%= brand.name %>" 
                        name="brand" 
                        value="<%= brand.name %>"
                        <%= selectedBrands && selectedBrands.includes(brand.name) ? 'checked' : '' %>>
                  <label class="ml-2 text-xs sm:text-sm text-gray-700 hover:text-primary cursor-pointer" for="brand-<%= brand.name %>"><%= brand.name %></label>
                </div>
              <% }) %>
            </div>
          </div>
          
          <!-- Category -->
          <div class="mb-4 sm:mb-6">
            <h6 class="font-medium text-gray-800 mb-2 sm:mb-3 flex items-center text-sm sm:text-base">
              <span class="w-1 h-4 bg-primary rounded-full mr-2"></span>
              Category
            </h6>
            <div class="space-y-2 max-h-40 sm:max-h-48 overflow-y-auto pr-2 scrollbar-thin">
              <% categories.forEach(category => { %>
                <div class="flex items-center">
                  <input class="w-4 h-4 text-primary border-gray-300 rounded focus:ring-primary" 
                        type="checkbox" 
                        id="category-<%= category.name %>" 
                        name="category" 
                        value="<%= category.name %>"
                        <%= selectedCategories && selectedCategories.includes(category.name) ? 'checked' : '' %>>
                  <label class="ml-2 text-xs sm:text-sm text-gray-700 hover:text-primary cursor-pointer" for="category-<%= category.name %>"><%= category.name %></label>
                </div>
              <% }) %>
            </div>
          </div>
          
          <!-- Sort -->
          <div class="mb-4 sm:mb-6">
            <h6 class="font-medium text-gray-800 mb-2 sm:mb-3 flex items-center text-sm sm:text-base">
              <span class="w-1 h-4 bg-primary rounded-full mr-2"></span>
              Sort By
            </h6>
            <select name="sort" class="w-full bg-gray-50 border border-gray-200 text-gray-700 text-xs sm:text-sm rounded-lg focus:ring-primary focus:border-primary p-2 sm:p-2.5 appearance-none bg-no-repeat bg-right pr-8" style="background-image: url('data:image/svg+xml;charset=US-ASCII,<svg xmlns=%22http://www.w3.org/2000/svg%22 width=%2216%22 height=%2216%22 fill=%22%23666%22 viewBox=%220 0 16 16%22><path d=%22M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z%22/></svg>'); background-position: right 0.75rem center;">
              <option value="" <%= !sortOption ? 'selected' : '' %>>Default</option>
              <option value="priceLowToHigh" <%= sortOption === 'priceLowToHigh' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="priceHighToLow" <%= sortOption === 'priceHighToLow' ? 'selected' : '' %>>Price: High to Low</option>
              <option value="nameAToZ" <%= sortOption === 'nameAToZ' ? 'selected' : '' %>>Name: A - Z</option>
              <option value="nameZToA" <%= sortOption === 'nameZToA' ? 'selected' : '' %>>Name: Z - A</option>
            </select>
          </div>
          
          <!-- Submit -->
          <button type="submit" class="w-full bg-primary hover:bg-primary-dark text-white font-medium py-2 sm:py-3 px-3 sm:px-4 rounded-lg transition duration-300 ease-in-out flex items-center justify-center text-sm sm:text-base">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 sm:h-5 w-4 sm:w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
            </svg>
            Apply Filters
          </button>
          
          <!-- Reset Filters -->
          <a href="/shop" class="mt-2 sm:mt-3 w-full bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-1 sm:py-2 px-3 sm:px-4 rounded-lg transition duration-300 ease-in-out text-center block text-sm sm:text-base">
            Reset Filters
          </a>
        </form>
      </div>
      
      <!-- Products Grid -->
      <div class="w-full lg:w-4/5">
        <!-- Results Summary -->
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 sm:mb-6 pb-3 sm:pb-4 border-b border-gray-200">
          <div>
            <h2 class="text-lg sm:text-xl font-semibold text-gray-800">All Products</h2>
            <p class="text-xs sm:text-sm text-gray-500 mt-1">Showing <%= products.length %> results</p>
          </div>
        </div>
        
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
          <% products.forEach(product => { %>
            <div class="bg-white rounded-xl shadow-sm overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1 border border-gray-100 group">
              <a href="/productView/<%= product._id %>" class="block relative">
                <img src="<%= product.mainImage %>" class="w-full h-48 sm:h-56 object-cover transition-transform duration-500 group-hover:scale-105" alt="<%= product.name %>">
                <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <button type="button" onclick="addToWishlist('<%= product._id %>', event)" class="absolute top-2 sm:top-3 right-2 sm:right-3 text-gray-100 hover:text-red-500 bg-black/20 hover:bg-white backdrop-blur-sm rounded-full p-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <i class="bi <%= wishlist.includes(product._id.toString()) ? 'bi-heart-fill text-red-600' : 'bi-heart' %>"></i>
                </button>
                <div class="absolute top-2 sm:top-3 left-2 sm:left-3">
                  <span class="bg-primary text-white text-xs font-bold px-2 py-1 rounded-full">NEW</span>
                </div>
              </a>
              
              <div class="p-4 sm:p-5">
                <h5 class="text-gray-800 font-semibold text-base sm:text-lg mb-2 truncate"><%= product.name %></h5>
                
                <div class="flex items-center mb-2 sm:mb-3">
                  <div class="flex text-amber-400">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  </div>
                  <span class="text-xs text-gray-500 ml-1">(4.0)</span>
                </div>
                
                <!-- Volume Dropdown and Price Display -->
                <div class="mb-3 sm:mb-4">
                  <select class="w-full bg-gray-50 border border-gray-200 text-gray-700 text-xs sm:text-sm rounded-lg focus:ring-primary focus:border-primary p-2 sm:p-2.5 product-size" 
                          data-product-id="<%= product._id %>"
                          onchange="updatePrice(this, '<%= product._id %>')">
                    <option value="" disabled selected>Select Size</option>
                    <% product.variants.forEach(variant => { %>
                      <option 
                        value="<%= variant._id %>" 
                        data-regular="<%= variant.regularPrice %>" 
                        data-discounted="<%= variant.discountedPrice %>">
                        <%= variant.size %>
                      </option>
                    <% }) %>
                  </select>
                </div>
                
                <!-- Price will update based on selected volume -->
                <div class="flex items-center justify-between mb-3 sm:mb-4">
                  <p class="text-lg sm:text-xl font-bold text-primary flex items-center gap-2" id="price-<%= product._id %>">
                    <% if (product.variants && product.variants.length > 0) { %>
                      <% const firstVariant = product.variants[0]; %>
                      <% if (firstVariant.discountedPrice < firstVariant.regularPrice) { %>
                        <span>₹<%= firstVariant.discountedPrice %></span>
                        <span class="text-xs sm:text-sm line-through text-gray-500 font-normal">₹<%= firstVariant.regularPrice %></span>
                        <span class="text-xs sm:text-sm text-green-600 font-medium">
                          (<%= Math.round(100 - (firstVariant.discountedPrice / firstVariant.regularPrice) * 100) %>% OFF)
                        </span>
                      <% } else { %>
                        ₹<%= firstVariant.regularPrice %>
                      <% } %>
                    <% } else { %>
                      Price not available
                    <% } %>
                  </p>
                </div>
                
                <div class="flex space-x-2">
                  <button type="button" 
                        class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition duration-300 ease-in-out text-sm sm:text-base" 
                        onclick="addtoCart('<%= product._id %>')">
                  Add to Cart
                </button>
                  <a href="/productView/<%= product._id %>" class="bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition duration-300 ease-in-out flex items-center justify-center text-sm sm:text-base">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 sm:h-5 w-4 sm:w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
        
        <!-- Empty State (if no products) -->
        <% if (products.length === 0) { %>
          <div class="flex flex-col items-center justify-center py-8 sm:py-16 bg-white rounded-xl shadow-sm border border-gray-100">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 sm:h-20 w-16 sm:w-20 text-gray-300 mb-4 sm:mb-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
            <h3 class="text-lg sm:text-xl font-medium text-gray-900 mb-2">No products found</h3>
            <p class="text-sm sm:text-base text-gray-500 mb-6 sm:mb-8 text-center max-w-md">We couldn't find any products matching your criteria. Try adjusting your filters or search terms.</p>
            <a href="/shop" class="bg-primary hover:bg-primary-dark text-white font-medium py-2 sm:py-3 px-6 sm:px-8 rounded-lg transition duration-300 ease-in-out flex items-center text-sm sm:text-base">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 sm:h-5 w-4 sm:w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7" />
              </svg>
              View All Products
            </a>
          </div>
        <% } %>
        
        <!-- Pagination -->
        <% if (totalPages > 1) { %>
          <nav class="flex justify-center mt-8 sm:mt-12 mb-6 sm:mb-8">
            <ul class="flex flex-wrap gap-1 sm:gap-2">
              <% if(currentPage > 1) { %>
                <li>
                  <a href="?page=<%= currentPage - 1 %><%= search %>" 
                     class="px-3 sm:px-4 py-1 sm:py-2 bg-white border border-gray-200 rounded-lg text-gray-700 hover:bg-gray-50 flex items-center text-sm sm:text-base">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    Prev
                  </a>
                </li>
              <% } %>

              <% const maxVisiblePages = 5;
                 let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
                 let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
                 
                 if (endPage - startPage + 1 < maxVisiblePages) {
                   startPage = Math.max(1, endPage - maxVisiblePages + 1);
                 }
                 
                 for(let i = startPage; i <= endPage; i++) { %>
                <li>
                  <a href="?page=<%= i %><%= search %>" 
                     class="px-3 sm:px-4 py-1 sm:py-2 <%= i === currentPage ? 'bg-primary text-white' : 'bg-white text-gray-700 hover:bg-gray-50' %> border border-gray-200 rounded-lg text-sm sm:text-base">
                    <%= i %>
                  </a>
                </li>
              <% } %>

              <% if(currentPage < totalPages) { %>
                <li>
                  <a href="?page=<%= currentPage + 1 %><%= search %>" 
                     class="px-3 sm:px-4 py-1 sm:py-2 bg-white border border-gray-200 rounded-lg text-gray-700 hover:bg-gray-50 flex items-center text-sm sm:text-base">
                    Next
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </a>
                </li>
              <% } %>
            </ul>
          </nav>
        <% } %>
      </div>
    </div>
  </div>

  <%- include("lFooter") %>

  <script>
    document.getElementById("clearSearch").addEventListener("click", function() {
      document.getElementById("searchInput").value = "";
      window.location.href = "/shop";
    });

    // Function to update price when volume is selected
function updatePrice(select, productId) {
  const regular = parseFloat(select.selectedOptions[0].dataset.regular);
  const discounted = parseFloat(select.selectedOptions[0].dataset.discounted);
  const priceBlock = document.getElementById(`price-${productId}`);

  if (regular > discounted) {
    priceBlock.innerHTML = `
      ₹${discounted} 
      <span class="text-xs sm:text-sm line-through text-gray-500 font-normal">₹${regular}</span>
      <span class="text-xs sm:text-sm text-green-600 font-medium">(${Math.round(((regular - discounted) / regular) * 100)}% OFF)</span>
    `;
  } else {
    priceBlock.innerHTML = `₹${regular}`;
  }
}

// ===== BLOCK ALL ACTIONS & REDIRECT TO LOGIN =====
function blockActionAndRedirect(actionName = "This action") {
  Swal.fire({
    icon: 'error',
    title: 'Login Required',
    text: `Please login or signup to ${actionName}.`,
    confirmButtonText: 'Go to Login',
    confirmButtonColor: '#007D8B',
    allowOutsideClick: false,
    allowEscapeKey: false,
  }).then(() => {
    // Redirect to login with current page as return URL
    window.location.href = `/user/login`;
  });
}

// ===== OVERRIDE ALL ACTION FUNCTIONS =====
function addtoCart() {
  blockActionAndRedirect("add items to cart");
}

function addToWishlist() {
  blockActionAndRedirect("add items to wishlist");
}

// ===== DISABLE ALL BUTTONS =====
document.addEventListener('DOMContentLoaded', () => {
  // Disable all cart/wishlist buttons
  document.querySelectorAll('[onclick*="addtoCart"], [onclick*="addToWishlist"]').forEach(button => {
    button.onclick = (e) => {
      e.preventDefault();
      e.stopPropagation();
      blockActionAndRedirect("perform this action");
    };
  });
});

async function addtoCart(productId) {
  const sizeSelector = document.querySelector(`.product-size[data-product-id="${productId}"]`);
  
  if (!sizeSelector || sizeSelector.selectedIndex === 0) {
    Swal.fire({
      icon: 'warning',
      title: 'Oops...',
      text: 'Please select a size first'
    });
    return;
  }
  
  const selectedOption = sizeSelector.options[sizeSelector.selectedIndex];
  const variantId = selectedOption.value; // This is the variant._id
  const sizeText = selectedOption.textContent.trim(); // This is the actual size name
  
  try {
    const response = await fetch(`/user/addtoCart/${productId}`, {
      method: "POST",
      headers: {"Content-Type": "application/json"},
      body: JSON.stringify({ 
        size: sizeText        // Send only the size name
      })
    });
    
    const result = await response.json();
    
    if(result.success) {
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: result.message
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.message
      });
    }
  } catch (error) {
    console.error("Error adding to cart:", error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An unexpected error occurred. Please try again.'
    });
  }
}

// Modified addToWishlist function
async function addToWishlist(productId, event) {
  event.preventDefault();
  event.stopPropagation();
  
  const heartIcon = event.currentTarget.querySelector('i.bi-heart, i.bi-heart-fill');
  const isCurrentlyInWishlist = heartIcon.classList.contains('bi-heart-fill');
  
  try {
    const response = await fetch(`/user/addtoWishlist/${productId}`, {
      method: "POST",
      headers: {"Content-Type": "application/json"}
    });
    
    const result = await response.json();

    if(result.success) {
      if (isCurrentlyInWishlist) {
        // Remove from wishlist
        heartIcon.classList.remove('bi-heart-fill');
        heartIcon.classList.add('bi-heart');
        heartIcon.style.color = '';
      } else {
        // Add to wishlist
        heartIcon.classList.remove('bi-heart');
        heartIcon.classList.add('bi-heart-fill');
        heartIcon.style.color = 'red';
      }
      
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: result.message,
        confirmButtonColor: '#007D8B'
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.message,
        confirmButtonColor: '#007D8B'
      });
    }
  } catch (error) {
    console.error("Error updating wishlist:", error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An unexpected error occurred. Please try again.',
      confirmButtonColor: '#007D8B'
    });
  }
}

// Fixed function to check wishlist status on page load
async function checkWishlistStatus() {
  try {
    const response = await fetch('/user/getWishlist', {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include'
    });

    if (!response.ok) {
      console.error('Wishlist fetch failed:', response.status, response.statusText);
      return;
    }

    const result = await response.json();
    console.log('Wishlist response:', result);

    if (result.success && Array.isArray(result.wishlist)) {
      // Get all wishlist product IDs for easier lookup
      const wishlistProductIds = result.wishlist.map(item => {
        // Handle both string and object cases
        return typeof item === 'string' ? item : (item.productId || item._id || item.product);
      });
      
      console.log('Wishlist product IDs:', wishlistProductIds);

      // Find all heart icons and update them
      document.querySelectorAll('button[onclick*="addToWishlist"]').forEach(button => {
        const onclickAttr = button.getAttribute('onclick');
        const productIdMatch = onclickAttr.match(/addToWishlist\(['"]([^'"]+)['"]/);
        
        if (!productIdMatch) {
          console.warn('No productId found for button:', button);
          return;
        }
        
        const productId = productIdMatch[1];
        console.log('Checking productId:', productId);

        // Check if this product is in the wishlist
        if (wishlistProductIds.includes(productId)) {
          const heartIcon = button.querySelector('i.bi-heart, i.bi-heart-fill');
          if (heartIcon) {
            console.log('Updating icon for productId:', productId);
            heartIcon.classList.remove('bi-heart');
            heartIcon.classList.add('bi-heart-fill');
            heartIcon.style.color = 'red';
          } else {
            console.warn('No heart icon found for productId:', productId);
          }
        }
      });
    } else {
      console.warn('Invalid wishlist data:', result);
    }
  } catch (error) {
    console.error('Error checking wishlist status:', error);
  }
}

// Clear search functionality
document.getElementById("clearSearch").addEventListener("click", function() {
  document.getElementById("searchInput").value = "";
  window.location.href = "/shop";
});

// Call the function on page load
document.addEventListener('DOMContentLoaded', checkWishlistStatus);
  </script>
</body>
</html>