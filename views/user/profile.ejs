<%- include("partials/uHeader") %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/css/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <!-- Cropper.js CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js"></script>
</head>
<body class="bg-gray-50">
  <div class="flex min-h-screen">
    <%- include("partials/userSidebar", { activeTab: activeTab }) %>
    <div class="flex-1 ml-0 sm:ml-64 pt-16">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <% if (success && success.length) { %>
          <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4" role="alert">
            <p><%= success %></p>
          </div>
          <script>
            document.addEventListener('DOMContentLoaded', function() {
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: '<%= success %>',
                confirmButtonColor: '#059669'
              });
            });
          </script>
        <% } %>
        <% if (error && error.length) { %>
          <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4" role="alert">
            <p><%= error %></p>
          </div>
          <script>
            document.addEventListener('DOMContentLoaded', function() {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '<%= error %>',
                confirmButtonColor: '#dc2626'
              });
            });
          </script>
        <% } %>

        <!-- Profile Tab -->
        <% if (activeTab === 'profile') { %>
          <div class="bg-white rounded-lg shadow-lg p-6 mt-6">
            <h5 class="text-lg font-semibold mb-4">Profile Details</h5>
            <div class="flex items-center mb-6">
              <div class="relative">
                <img src="<%= user.profileImage || '/images/default-profile.png' %>" alt="Profile" class="w-24 h-24 rounded-full mr-4 object-cover" id="profileImage">
                <button onclick="document.getElementById('imageInput').click()" class="absolute bottom-0 right-0 bg-indigo-600 text-white text-xs px-2 py-1 rounded-full hover:bg-indigo-700">Change</button>
                <input type="file" id="imageInput" accept="image/*" class="hidden" onchange="openCropperModal(event)">
              </div>
              <div>
                <p><strong>Name:</strong> <%= user.fullname %></p>
                <p><strong>Email:</strong> <%= user.email %></p>
                <p><strong>Phone:</strong> <%= user.phoneNumber || 'Not set' %></p>
              </div>
            </div>

            <!-- Addresses Section -->
            <h6 class="text-md font-semibold mb-3">Your Addresses</h6>
            <% if (addresses.length > 0) { %>
              <div class="space-y-4">
                <% addresses.forEach((address, index) => { %>
                  <div class="border rounded-lg p-4 <%= address.isDefault ? 'border-green-500 bg-green-50' : 'border-gray-200' %>">
                    <div>
                      <p class="font-medium"><%= address.name %> <%= address.isDefault ? '<span class="text-green-600 text-sm">(Default)</span>' : '' %></p>
                      <p class="text-sm text-gray-600">
                        <%= address.landMark ? address.landMark + ', ' : '' %>
                        <%= address.city %>, <%= address.state %>, <%= address.pincode %>
                      </p>
                      <p class="text-sm text-gray-600">Phone: <%= address.phone %></p>
                      <p class="text-sm text-gray-600">Type: <%= address.addressType %></p>
                    </div>
                  </div>
                <% }) %>
              </div>
            <% } else { %>
              <p class="text-gray-500 mb-4">No addresses found.</p>
            <% } %>
          </div>

          <!-- Cropper Modal -->
          <div id="cropperModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 w-full max-w-lg">
              <h3 class="text-lg font-semibold mb-4">Crop Image</h3>
              <div class="mb-4">
                <img id="imageToCrop" class="max-w-full h-auto">
              </div>
              <div class="flex justify-end space-x-2">
                <button onclick="closeCropperModal()" class="bg-gray-300 text-gray-700 px-4 py-2 rounded hover:bg-gray-400">Cancel</button>
                <button onclick="cropAndUpload()" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Save</button>
              </div>
            </div>
          </div>
        <% } %>

        <!-- Addresses Tab -->
        <% if (activeTab === 'addresses') { %>
          <div class="bg-white rounded-lg shadow-lg p-6 mt-6">
            <div class="flex justify-between items-center mb-4">
              <h5 class="text-lg font-semibold">Your Addresses</h5>
              <a href="/user/profile/address/add" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Add New Address</a>
            </div>
            <% if (addresses.length > 0) { %>
              <div class="space-y-4">
                <% addresses.forEach((address, index) => { %>
                  <div class="border rounded-lg p-4 flex justify-between items-center <%= address.isDefault ? 'border-green-500 bg-green-50' : 'border-gray-200' %>">
                    <div>
                      <p class="font-medium"><%= address.name %> <%= address.isDefault ? '<span class="text-green-600 text-sm">(Default)</span>' : '' %></p>
                      <p class="text-sm text-gray-600">
                        <%= address.landMark ? address.landMark + ', ' : '' %>
                        <%= address.city %>, <%= address.state %>, <%= address.pincode %>
                      </p>
                      <p class="text-sm text-gray-600">Phone: <%= address.phone %></p>
                      <p class="text-sm text-gray-600">Type: <%= address.addressType %></p>
                    </div>
                    <div class="flex space-x-2">
                      <% if (!address.isDefault) { %>
                        <button onclick="setDefaultAddress('<%= index %>')" class="text-green-600 hover:text-green-800 text-sm">Set as Default</button>
                      <% } %>
                      <a href="/user/profile/address/edit/<%= index %>" class="text-indigo-600 hover:text-indigo-800 text-sm">Edit</a>
                      <form action="/user/profile/address/delete/<%= index %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this address?');">
                        <button type="submit" class="text-red-600 hover:text-red-800 text-sm">Delete</button>
                      </form>
                    </div>
                  </div>
                <% }) %>
              </div>
            <% } else { %>
              <p class="text-gray-500">No addresses found. Add one now!</p>
            <% } %>
          </div>
        <% } %>

        <!-- Orders Tab -->
        <% if (activeTab === 'orders') { %>
          <div class="bg-white rounded-lg shadow-lg p-6 mt-6">
            <h5 class="text-lg font-semibold mb-4">Your Orders</h5>
            <form action="/user/profile" method="GET" class="mb-4">
              <input type="hidden" name="tab" value="orders">
              <input type="text" name="search" value="<%= searchQuery %>" placeholder="Search by Order ID" class="border rounded px-4 py-2">
              <button type="submit" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Search</button>
            </form>
            <% if (orders.length > 0) { %>
              <div class="overflow-x-auto">
                <table class="w-full">
                  <thead class="bg-gray-100">
                    <tr>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Order ID</th>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Date</th>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Total</th>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                    </tr>
                  </thead>
                  <tbody class="divide-y divide-gray-200">
                    <% orders.forEach(order => { %>
                      <tr>
                        <td class="py-3 px-4 text-sm text-gray-500"><%= order.orderId %></td>
                        <td class="py-3 px-4 text-sm text-gray-500"><%= new Date(order.orderDate).toLocaleDateString() %></td>
                        <td class="py-3 px-4 text-sm text-gray-500">$<%= (order.totalAmount - (order.discount || 0)).toFixed(2) %></td>
                        <td class="py-3 px-4 text-sm text-gray-500">
                          <span class="px-2 py-1 rounded-full text-xs <%= order.status === 'delivered' ? 'bg-green-100 text-green-800' : order.status === 'processing' ? 'bg-yellow-100 text-yellow-800' : order.status === 'cancelled' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800' %>">
                            <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                          </span>
                        </td>
                        <td class="py-3 px-4 text-sm text-gray-500">
                          <a href="/user/ordersDetails/<%= order._id %>" class="text-indigo-600 hover:text-indigo-800">View</a>
                        </td>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
              <!-- Pagination -->
              <% if (totalPages > 1) { %>
                <div class="mt-4 flex justify-center">
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="/user/profile?tab=orders&page=<%= i %>&search=<%= searchQuery %>" class="<%- currentPage === i ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700' %> px-4 py-2 mx-1 rounded"><%= i %></a>
                  <% } %>
                </div>
              <% } %>
            <% } else { %>
              <p class="text-gray-500">No orders found.</p>
            <% } %>
          </div>
        <% } %>

        <!-- Wallet Status Tab -->
        <% if (activeTab === 'wallet-status') { %>
          <div class="bg-white rounded-lg shadow-lg p-6 mt-6">
            <h5 class="text-lg font-semibold mb-4">Wallet Status</h5>
            <p><strong>Balance:</strong> $<%= walletBalance.toFixed(2) %></p>
          </div>
        <% } %>

        <!-- Wallet History Tab -->
        <% if (activeTab === 'wallet-history') { %>
          <div class="bg-white rounded-lg shadow-lg p-6 mt-6">
            <h5 class="text-lg font-semibold mb-4">Wallet History</h5>
            <% if (history.length > 0) { %>
              <div class="overflow-x-auto">
                <table class="w-full">
                  <thead class="bg-gray-100">
                    <tr>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Date</th>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Type</th>
                      <th class="py-2 px-4 text-left text-xs font-medium text-gray-500 uppercase">Amount</th>
                    </tr>
                  </thead>
                  <tbody class="divide-y divide-gray-200">
                    <% history.forEach(tx => { %>
                      <tr>
                        <td class="py-3 px-4 text-sm text-gray-500"><%= new Date(tx.createdAt).toLocaleDateString() %></td>
                        <td class="py-3 px-4 text-sm text-gray-500"><%= tx.type %></td>
                        <td class="py-3 px-4 text-sm text-gray-500">$<%= tx.amount.toFixed(2) %></td>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            <% } else { %>
              <p class="text-gray-500">No wallet transactions found.</p>
            <% } %>
          </div>
        <% } %>

        <!-- Referrals Tab -->
        <% if (activeTab === 'referrals') { %>
          <div class="bg-white rounded-lg shadow-lg p-6 mt-6">
            <h5 class="text-lg font-semibold mb-4">Referrals</h5>
            <p class="text-gray-500">No referrals available.</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <script>
    // Profile Image Cropping and Uploading
    let cropper;

    function openCropperModal(event) {
      const file = event.target.files[0];
      console.log('Selected file:', file);
      if (!file) return;

      const reader = new FileReader();
      reader.onload = function (e) {
        const image = document.getElementById('imageToCrop');
        image.src = e.target.result;
        document.getElementById('cropperModal').classList.remove('hidden');

        if (cropper) cropper.destroy();
        cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 1,
          autoCropArea: 0.8,
          responsive: true,
        });
      };
      reader.readAsDataURL(file);
    }

    function closeCropperModal() {
      document.getElementById('cropperModal').classList.add('hidden');
      if (cropper) cropper.destroy();
      document.getElementById('imageInput').value = ''; // Reset file input
    }

    function cropAndUpload() {
      if (!cropper) return;

      cropper.getCroppedCanvas({ width: 200, height: 200 }).toBlob((blob) => {
        console.log('Cropped blob:', blob);
        const formData = new FormData();
        formData.append('profileImage', blob, 'profile.jpg');

        fetch('/user/profile/upload-image', {
          method: 'POST',
          body: formData,
        })
          .then((res) => {
            if (!res.ok) {
              throw new Error(`HTTP error! Status: ${res.status}`);
            }
            return res.json();
          })
          .then((data) => {
            if (data.success) {
              document.getElementById('profileImage').src = data.imageUrl;
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Profile image updated successfully!',
                confirmButtonColor: '#059669'
              });
              closeCropperModal();
            } else {
              console.error('Upload failed:', data);
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'Failed to upload image',
                confirmButtonColor: '#dc2626'
              });
            }
          })
          .catch((err) => {
            console.error('Error uploading image:', err);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Error uploading image: ' + err.message,
              confirmButtonColor: '#dc2626'
            });
          });
      }, 'image/jpeg', 0.8);

      document.getElementById('imageInput').value = ''; // Reset file input
    }

    async function setDefaultAddress(index) {
      const result = await Swal.fire({
        title: 'Set as Default Address?',
        text: 'This will make this address your default for future orders.',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#059669',
        cancelButtonColor: '#6b7280',
        confirmButtonText: 'Yes, set as default',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/user/profile/address/set-default/${index}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }
          });

          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              icon: 'success',
              title: 'Success',
              text: data.message,
              confirmButtonColor: '#059669'
            });
            window.location.reload();
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message || 'Failed to set default address',
              confirmButtonColor: '#dc2626'
            });
          }
        } catch (err) {
          console.error('Error setting default address:', err);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to set default address. Please try again.',
            confirmButtonColor: '#dc2626'
          });
        }
      }
    }

    // Mobile menu functionality
    document.addEventListener("DOMContentLoaded", function () {
      const mobileMenuToggle = document.getElementById("mobile-menu-toggle");
      const mobileMenu = document.getElementById("mobile-menu");
      const closeMobileMenu = document.getElementById("close-mobile-menu");
      const toggleSidebar = document.getElementById("toggle-sidebar");
      const sidebar = document.getElementById("sidebar");

      if (mobileMenuToggle) {
        mobileMenuToggle.addEventListener("click", () => {
          mobileMenu.classList.toggle("hidden");
        });
      }

      if (closeMobileMenu) {
        closeMobileMenu.addEventListener("click", () => {
          mobileMenu.classList.add("hidden");
        });
      }

      if (toggleSidebar) {
        toggleSidebar.addEventListener("click", () => {
          sidebar.classList.toggle("hidden");
          mobileMenu.classList.add("hidden");
        });
      }

      if (mobileMenu) {
        window.addEventListener("click", (e) => {
          if (e.target === mobileMenu) {
            mobileMenu.classList.add("hidden");
          }
        });
      }
    });
  </script>
</body>
</html>