<div class="container mx-auto mt-4 sm:mt-6 px-3 sm:px-4">
  <div class="bg-white rounded-lg shadow-sm sm:shadow-md p-4 sm:p-6">
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 sm:mb-6 gap-3 sm:gap-0">
      <h1 class="text-xl sm:text-2xl font-bold text-gray-800">User Management</h1>
      <div class="flex items-center space-x-2">
        <span class="px-2 sm:px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs sm:text-sm font-medium">
          Total Users: <%= totalUsers %>
        </span>
      </div>
    </div>

    <% if (messages.error) { %>
      <div class="bg-red-50 border-l-4 border-red-500 p-3 sm:p-4 mb-4 sm:mb-6 rounded text-xs sm:text-sm">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-4 sm:h-5 w-4 sm:w-5 text-red-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-2 sm:ml-3">
            <p class="text-red-700"><%= messages.error %></p>
          </div>
        </div>
      </div>
    <% } %>
    
    <% if (messages.success) { %>
      <div class="bg-green-50 border-l-4 border-green-500 p-3 sm:p-4 mb-4 sm:mb-6 rounded text-xs sm:text-sm">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-4 sm:h-5 w-4 sm:w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-2 sm:ml-3">
            <p class="text-green-700"><%= messages.success %></p>
          </div>
        </div>
      </div>
    <% } %>

    <div class="mb-4 sm:mb-6 flex flex-col sm:flex-row gap-2 sm:gap-3">
      <form action="/admin/users-management" method="GET" class="flex w-full">
        <div class="relative flex-grow">
          <input
            type="text"
            name="search"
            value="<%= searchQuery %>"
            placeholder="Search by name or email..."
            class="w-full pl-8 sm:pl-10 pr-3 sm:pr-4 py-2 border border-gray-300 rounded-l-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm sm:text-base"
          />
          <div class="absolute inset-y-0 left-0 pl-2 sm:pl-3 flex items-center pointer-events-none">
            <svg class="h-4 sm:h-5 w-4 sm:w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
            </svg>
          </div>
        </div>
        <button
          type="submit"
          class="px-3 sm:px-4 py-2 bg-blue-600 text-white font-medium rounded-r-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 text-sm sm:text-base"
        >
          Search
        </button>
        <% if (searchQuery) { %>
          <a
            href="/admin/users-management"
            class="ml-2 px-3 sm:px-4 py-2 bg-gray-200 text-gray-700 font-medium rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 flex items-center text-sm sm:text-base"
          >
            <svg class="h-4 sm:h-5 w-4 sm:w-5 mr-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
            Clear
          </a>
        <% } %>
      </form>
    </div>

    <div class="overflow-x-auto rounded-lg border border-gray-200 shadow-xs sm:shadow-sm">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
            <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
            <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% if (users.length > 0) { %>
            <% users.forEach(user => { %>
              <tr class="hover:bg-gray-50">
                <td class="px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap">
                  <div class="flex items-center">
                    <div class="flex-shrink-0 h-8 sm:h-10 w-8 sm:w-10 rounded-full bg-blue-100 flex items-center justify-center">
                      <span class="text-blue-600 font-medium text-sm sm:text-base"><%= user.fullname.charAt(0).toUpperCase() %></span>
                    </div>
                    <div class="ml-2 sm:ml-4">
                      <div class="text-sm font-medium text-gray-900"><%= user.fullname %></div>
                    </div>
                  </div>
                </td>
                <td class="px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap">
                  <div class="text-sm text-gray-900"><%= user.email %></div>
                </td>
                <td class="px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap">
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                    <%= user.isActive ? 'Active' : 'Blocked' %>
                  </span>
                </td>
                <td class="px-3 sm:px-6 py-3 sm:py-4 whitespace-nowrap text-sm font-medium">
                  <% if (user.isActive) { %>
                    <a
                      href="#"
                      class="inline-flex items-center px-2 sm:px-3 py-1 border border-transparent text-xs font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 mr-1 sm:mr-2"
                      onclick="return blockUser(event, '<%= user._id %>')"
                    >
                      Block
                    </a>
                  <% } else { %>
                    <a
                      href="#"
                      class="inline-flex items-center px-2 sm:px-3 py-1 border border-transparent text-xs font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      onclick="return unblockUser(event, '<%= user._id %>')"
                    >
                      Unblock
                    </a>
                  <% } %>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="4" class="px-3 sm:px-6 py-4 text-center">
                <div class="text-gray-500 py-4 sm:py-8">
                  <svg class="mx-auto h-8 sm:h-12 w-8 sm:w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <h3 class="mt-1 sm:mt-2 text-xs sm:text-sm font-medium text-gray-900">No users found</h3>
                  <p class="mt-1 text-xs sm:text-sm text-gray-500">Try adjusting your search or filter to find what you're looking for.</p>
                </div>
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <% if (totalPages > 1) { %>
      <div class="mt-4 sm:mt-6 flex flex-col sm:flex-row justify-between items-center gap-3 sm:gap-0">
        <p class="text-xs sm:text-sm text-gray-700 mb-2 sm:mb-0">
          Showing <span class="font-medium"><%= ((currentPage - 1) * limit) + 1 %></span> to <span class="font-medium"><%= Math.min(currentPage * limit, totalUsers) %></span> of <span class="font-medium"><%= totalUsers %></span> results
        </p>
        <div class="flex flex-wrap gap-1 justify-center">
          <% if (currentPage > 1) { %>
            <a
              href="/admin/users-management?page=1<%= searchQuery ? '&search=' + searchQuery : '' %>"
              class="px-2 sm:px-3 py-1 border rounded hover:bg-gray-100 text-xs sm:text-sm"
            >
              First
            </a>
            <a
              href="/admin/users-management?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>"
              class="px-2 sm:px-3 py-1 border rounded hover:bg-gray-100 text-xs sm:text-sm"
            >
              Prev
            </a>
          <% } %>

          <% const maxVisiblePages = 5;
             let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
             let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
             
             if (endPage - startPage + 1 < maxVisiblePages) {
               startPage = Math.max(1, endPage - maxVisiblePages + 1);
             }
             
             for (let i = startPage; i <= endPage; i++) { %>
            <a
              href="/admin/users-management?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"
              class="px-2 sm:px-3 py-1 border rounded <%= i === currentPage ? 'bg-blue-600 text-white' : 'hover:bg-gray-100' %> text-xs sm:text-sm"
            >
              <%= i %>
            </a>
          <% } %>

          <% if (currentPage < totalPages) { %>
            <a
              href="/admin/users-management?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>"
              class="px-2 sm:px-3 py-1 border rounded hover:bg-gray-100 text-xs sm:text-sm"
            >
              Next
            </a>
            <a
              href="/admin/users-management?page=<%= totalPages %><%= searchQuery ? '&search=' + searchQuery : '' %>"
              class="px-2 sm:px-3 py-1 border rounded hover:bg-gray-100 text-xs sm:text-sm"
            >
              Last
            </a>
          <% } %>
        </div>
      </div>
    <% } %>
  </div>
</div>

<!-- Original script remains completely unchanged -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  async function blockUser(event, userId) {
    event.preventDefault();
    const result = await Swal.fire({
      title: 'Block User?',
      text: 'Are you sure you want to block this user?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#dc2626',
      cancelButtonColor: '#6b7280',
      confirmButtonText: 'Yes, block user',
      cancelButtonText: 'Cancel'
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch(`/admin/block-user/${userId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        });

        const data = await response.json();

        if (data.success) {
          await Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: 'User blocked successfully',
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true
          });
          // Wait a bit before reloading to ensure toast is visible
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        } else {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: data.message || 'Failed to block user',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true
          });
        }
      } catch (err) {
        console.error('Error blocking user:', err);
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Failed to block user. Please try again.',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true
        });
      }
    }
    return false;
  }

  async function unblockUser(event, userId) {
    event.preventDefault();
    const result = await Swal.fire({
      title: 'Unblock User?',
      text: 'Are you sure you want to unblock this user?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#059669',
      cancelButtonColor: '#6b7280',
      confirmButtonText: 'Yes, unblock user',
      cancelButtonText: 'Cancel'
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch(`/admin/unblock-user/${userId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        });

        const data = await response.json();

        if (data.success) {
          await Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: 'User unblocked successfully',
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true
          });
          // Wait a bit before reloading to ensure toast is visible
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        } else {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: data.message || 'Failed to unblock user',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true
          });
        }
      } catch (err) {
        console.error('Error unblocking user:', err);
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Failed to unblock user. Please try again.',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true
        });
      }
    }
    return false;
  }
</script>