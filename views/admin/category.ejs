<div class="px-3 sm:px-4 py-4 sm:py-6 bg-[var(--surface)] rounded-md shadow-sm">
    <h1 class="text-xl sm:text-2xl font-semibold text-[var(--text)] mb-4 sm:mb-6">Category Management</h1>

    <form method="GET" action="/admin/categories" class="flex flex-col sm:flex-row gap-3 mb-4 sm:mb-6">
        <input type="text" name="search" value="<%= searchQuery %>" 
               placeholder="Search category..." 
               class="border border-[var(--border)] px-3 sm:px-4 py-2 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[var(--brand)] text-sm sm:text-base placeholder-gray-400">
        <div class="flex gap-3">
            <button type="submit" class="bg-[var(--brand)] text-[var(--text)] px-3 sm:px-4 py-2 rounded-md hover:bg-[var(--brand-600)] transition text-sm sm:text-base w-full sm:w-auto focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                Search
            </button>
            <% if (searchQuery) { %>
            <a href="/admin/categories" 
               class="bg-gray-500 text-[var(--text)] px-3 sm:px-4 py-2 rounded-md hover:bg-gray-600 transition text-sm sm:text-base w-full sm:w-auto text-center focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                Clear
            </a>
            <% } %>
        </div>
    </form>

    <a href="/admin/categories/add" 
       class="bg-[var(--brand)] text-[var(--text)] px-4 py-2 rounded-md inline-block mb-4 sm:mb-6 hover:bg-[var(--brand-600)] transition shadow-sm text-sm sm:text-base focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
       + Add Category
    </a>

    <div class="overflow-x-auto">
        <table class="w-full border border-[var(--border)] bg-[var(--surface)] rounded-md shadow-sm">
            <thead>
                <tr class="bg-[var(--bg)]">
                    <th class="p-2 sm:p-4 border-b border-[var(--border)] text-sm sm:text-base text-[var(--text)]">Index</th>
                    <th class="p-2 sm:p-4 border-b border-[var(--border)] text-sm sm:text-base text-[var(--text)]">Name</th>
                    <th class="p-2 sm:p-4 border-b border-[var(--border)] text-sm sm:text-base text-[var(--text)]">Status</th>
                    <th class="p-2 sm:p-4 border-b border-[var(--border)] text-sm sm:text-base text-[var(--text)]">Offer</th>
                    <th class="p-2 sm:p-4 border-b border-[var(--border)] text-sm sm:text-base text-[var(--text)]">Actions</th>
                </tr>
            </thead>
            <tbody>
                <% categories.forEach((category, index) => { %>
                <tr class="text-center border-b border-[var(--border)] hover:bg-gray-100 transition">
                    <td class="p-2 sm:p-4 text-sm sm:text-base text-[var(--text)]"><%= index + 1 %></td>
                    <td class="p-2 sm:p-4 text-sm sm:text-base text-[var(--text)]"><%= category.name %></td>
                    <td class="p-2 sm:p-4 text-sm sm:text-base">
                        <% if (category.isActive) { %>
                        <span class="text-[var(--brand)] font-semibold">Listed</span>
                        <% } else { %>
                        <span class="text-red-500 font-semibold">Unlisted</span>
                        <% } %>
                    </td>
                    <td class="p-2 sm:p-4 text-sm sm:text-base text-[var(--text)]"><%= category.offer.discountPercentage %>%</td>
                    <td class="p-2 sm:p-4 text-sm sm:text-base flex justify-center space-x-2 sm:space-x-3">
                        <a href="/admin/categories/edit/<%= category._id %>" 
                           class="bg-[var(--brand)] text-[var(--text)] px-2 sm:px-3 py-1 rounded-md hover:bg-[var(--brand-600)] transition text-xs sm:text-sm focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                           Edit
                        </a>
                        <% if (category.isActive) { %>
                        <a href="#" onclick="unlistCategory('<%= category._id %>')" 
                           class="bg-red-500 text-[var(--text)] px-2 sm:px-3 py-1 rounded-md hover:bg-red-600 transition text-xs sm:text-sm focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                           Unlist
                        </a>
                        <% } else { %>
                        <a href="#" onclick="listCategory('<%= category._id %>')" 
                           class="bg-[var(--brand)] text-[var(--text)] px-2 sm:px-3 py-1 rounded-md hover:bg-[var(--brand-600)] transition text-xs sm:text-sm focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                           List
                        </a>
                        <% } %>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <% if (totalPages > 1) { %>
    <div class="mt-4 sm:mt-6 flex flex-col sm:flex-row justify-between items-center gap-3 sm:gap-0">
        <p class="text-xs sm:text-sm text-gray-500">
            Showing <%= (currentPage - 1) * 10 + 1 %> to <%= Math.min(currentPage * 10, totalCategories) %> of <%= totalCategories %> categories
        </p>
        <div class="flex flex-wrap gap-1 justify-center">
            <% if (currentPage > 1) { %>
                <a href="/admin/categories?page=1&search=<%= searchQuery %>" 
                   class="px-2 sm:px-3 py-1 border border-[var(--border)] rounded-md bg-[var(--surface)] hover:bg-gray-100 transition text-xs sm:text-sm text-[var(--text)] focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                    First
                </a>
                <a href="/admin/categories?page=<%= currentPage - 1 %>&search=<%= searchQuery %>" 
                   class="px-2 sm:px-3 py-1 border border-[var(--border)] rounded-md bg-[var(--surface)] hover:bg-gray-100 transition text-xs sm:text-sm text-[var(--text)] focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                    Prev
                </a>
            <% } %>

            <% const maxVisiblePages = 5;
               let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
               let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
               
               if (endPage - startPage + 1 < maxVisiblePages) {
                   startPage = Math.max(1, endPage - maxVisiblePages + 1);
               }
               
               for (let i = startPage; i <= endPage; i++) { %>
                <a href="/admin/categories?page=<%= i %>&search=<%= searchQuery %>" 
                   class="px-2 sm:px-3 py-1 border border-[var(--border)] rounded-md <%= currentPage === i ? 'bg-[var(--brand)] text-[var(--text)]' : 'bg-[var(--surface)] hover:bg-gray-100 text-[var(--text)]' %> transition text-xs sm:text-sm focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                    <%= i %>
                </a>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <a href="/admin/categories?page=<%= currentPage + 1 %>&search=<%= searchQuery %>" 
                   class="px-2 sm:px-3 py-1 border border-[var(--border)] rounded-md bg-[var(--surface)] hover:bg-gray-100 transition text-xs sm:text-sm text-[var(--text)] focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                    Next
                </a>
                <a href="/admin/categories?page=<%= totalPages %>&search=<%= searchQuery %>" 
                   class="px-2 sm:px-3 py-1 border border-[var(--border)] rounded-md bg-[var(--surface)] hover:bg-gray-100 transition text-xs sm:text-sm text-[var(--text)] focus:ring-2 focus:ring-[var(--brand)] focus:ring-offset-2">
                    Last
                </a>
            <% } %>
        </div>
    </div>
    <% } %>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  const Toast = Swal.mixin({
    toast: true,
    position: 'top-end',
    timer: 2000,
    timerProgressBar: true,
    showConfirmButton: false
  });

  async function unlistCategory(id) {
    const confirmResult = await Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to unlist this category?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, unlist it!',
      cancelButtonText: 'Cancel'
    });

    if (!confirmResult.isConfirmed) return;

    try {
      const response = await fetch(`/admin/categories/unlist/${id}`, {
        method: 'PATCH'
      });

      if (response.ok) {
        Toast.fire({
          icon: 'success',
          title: 'Category unlisted successfully'
        }).then(() => location.reload());
      } else {
        Toast.fire({
          icon: 'error',
          title: 'Failed to unlist category'
        });
      }
    } catch (error) {
      Toast.fire({
        icon: 'error',
        title: 'Network error while unlisting'
      });
    }
  }

  async function listCategory(id) {
    try {
      const response = await fetch(`/admin/categories/list/${id}`, {
        method: 'PATCH'
      });

      if (response.ok) {
        Toast.fire({
          icon: 'success',
          title: 'Category listed successfully'
        }).then(() => location.reload());
      } else {
        Toast.fire({
          icon: 'error',
          title: 'Failed to list category'
        });
      }
    } catch (error) {
      Toast.fire({
        icon: 'error',
        title: 'Network error while listing'
      });
    }
  }
</script>